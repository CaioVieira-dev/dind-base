{
    "name": "Odeio docker <3",
    "dockerFile": "Dockerfile",
    "runArgs": [
        "--privileged"
    ],
    "remoteEnv": {
        "DOCKER_TLS_VERIFY": "1",
        "DOCKER_HOST": "tcp://localhost:2376",
        "DOCKER_CERT_PATH": "/certs"
    },
    "mounts": [
        "source=${localWorkspaceFolder}/.devcontainer/certs,target=/certs,type=bind,readonly"
    ],
    "forwardPorts": [
        2375,
        2376
    ],
    "portsAttributes": {
        "2375": {
            "label": "Docker API (unsecure)",
            "protocol": "http"
        },
        "2376": {
            "label": "Docker API (TLS)",
            "protocol": "https"
        }
    },
    "remoteUser": "vscode",
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind",
    "workspaceFolder": "/workspace",
    "postCreateCommand": "echo 'starting post create'; sudo rm -f /var/run/docker.pid && echo 'Removed docker.pid' && sudo dockerd --host=unix:///var/run/docker.sock --host=tcp://localhost:2376 --tlsverify --tlscacert=/certs/ca.pem --tlscert=/certs/server-cert.pem --tlskey=/certs/server-key.pem & sleep 10 && echo 'happy hacking'",
    "postStartCommand": "echo 'starting post start'; if ! pgrep dockerd > /dev/null; then sudo rm -f /var/run/docker.pid && echo 'Removed docker.pid' && sudo dockerd --host=unix:///var/run/docker.sock --host=tcp://localhost:2376 --tlsverify --tlscacert=/certs/ca.pem --tlscert=/certs/server-cert.pem --tlskey=/certs/server-key.pem & fi; sleep 10 && echo 'happy hacking'"
}